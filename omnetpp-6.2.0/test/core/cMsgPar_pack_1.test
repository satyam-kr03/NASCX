%description:
Tests cMsgPar.parsimPack/parsimUnpack.

%includes:
#include <string.h>
#ifdef WITH_PARSIM
#include <sim/parsim/cfilecommbuffer.h>
#endif

%global:

#ifdef WITH_PARSIM
static void testPack(cMsgPar& par)
{
    EV << "testing with type " << par.getType() << "\n";

    cFileCommBuffer buffer;
    par.parsimPack(&buffer);

    cMsgPar tmp("tmp");
    tmp.parsimUnpack(&buffer);
    ASSERT(buffer.isBufferEmpty());

    ASSERT(par.getType() == tmp.getType());
    ASSERT(par.str() == tmp.str());
}
#endif

%activity:
#ifndef WITH_PARSIM
  EV << "#SKIPPED: No parallel simulation support (WITH_PARSIM=no).\n";
  return;
#else

cMsgPar p("par");
testPack(p);

p.setBoolValue(true);
testPack(p);

p.setLongValue(1234567890L);
testPack(p);

p.setDoubleValue(3.1415927);
testPack(p);

p.setStringValue("short string");
testPack(p);

p.setStringValue("a very very very very very very very very very very very very very very very very looooong string");
testPack(p);

p.setStringValue("");
testPack(p);

EV << "OK\n";
#endif


%contains: stdout
testing with type L
testing with type B
testing with type L
testing with type D
testing with type S
testing with type S
testing with type S
OK

